#!/bin/bash
prog="envi"
basedir="$HOME/.$prog"
terminal="urxvt -e"
vim_servername=envi
sh_servername=envi
vifm_servername=envi
vim_cmd=envim
vifm_cmd=envifm
fish_cmd=envish

#init functions
main()
{
    make_configs
    find_servers
}
make_configs()
{
    if [ ! -d $basedir ]; then
        rm -rf "$basedir"
        mkdir "$basedir"
        make_vifm_start_config
        make_vim_start_config
        make_sh_start_config
        make_tmux_start_config
    fi
}
find_servers()
{
    if ! pidof envim; then
        start_vim_server
        sleep 0.05
    fi
    if ! tmux has-session -t$sh_servername; then
        start_sh_server
        sleep 0.05
    fi
    if ! pidof envifm; then
        start_vifm_server
        sleep 0.05
    fi
}

# config functions
make_vifm_start_config()
{
    printf "%b" "noremap \\l : normal! l<cr>\n"\
        "set vicmd=\"vim --servername envi --remote-tab-silent &\"\n"\
        "if \$SHELL == system('which fish')\n"\
        "    com! vcd :execute 'cd' system('readlink /proc/(pidof -s envim)/cwd ^ /dev/null &; if [ \$status != \"0\" ]; echo \".\"; end')\n"\
        "    com! fcd :execute '!!vim --servername envi --remote-send \"<Esc>: Fcd<CR>\" ^ /dev/null &; echo (if [ (pgrep -P (pidof -s envish)) ]; tmux send-keys -tenvi C-z Enter Enter ^ /dev/null &; end); echo (sleep 0.1; tmux send-keys -tenvi M-f) ^ /dev/null &'\n"\
        "    com! scd :execute 'cd' system('readlink /proc/(pidof -s envish)/cwd ^ /dev/null; if [ \$status != \"0\" ]; echo \".\"; end')\n"\
        "    nmap <space>cd :vcd<cr>\n"\
        "    nno l : normal! l<cr>: fcd<cr>\n"\
        "    nno h : normal! h<cr>: fcd<cr>\n"\
        "    nno <space>r : fcd<cr>\n"\
        "    nno <c-o> <C-o>: fcd<cr>\n"\
        "    nno <tab> <c-w><c-w>: fcd<cr>\n"\
        "endif"\
        > $basedir/vifm-start
}
make_vim_start_config()
{
    printf "%b" \
        "function! _vcd(dir)\n"\
        "   if a:dir != '' \n"\
        "       exec 'cd' a:dir\n"\
        "   endif\n"\
        "   call system(\"!!echo (if [ (pgrep -P (pidof -s envish)) ]; tmux send-keys -tenvi C-z Enter Enter ^ /dev/null &; end); echo (sleep 0.1; tmux send-keys -tenvi M-v) ^ /dev/null &;\")\n"\
        "   call system(\"vifm --server-name envi --remote -c vcd ^ /dev/null &; cd \$argv\")\n"\
        "endfunction\n"\
        "function! _zz()\n"\
        "   call system(\"tmux kill-session -tenvi ^ /dev/null &\")\n"\
        "   call system(\"vifm --server-name envi --remote -c exit ^ /dev/null\")\n"\
        "endfunction\n"\
        "command! -complete=dir -nargs=? Vcd call _vcd('<args>')\n"\
        "command! Scd exec 'cd' system (\"if [ (pidof envish) ]; readlink /proc/(pidof -s envish)/cwd; end\")\n"\
        "command! Fcd exec 'cd' system (\"if [ (pidof envifm) ]; readlink /proc/(pidof -s envifm)/cwd; end\")\n"\
        "nno ZZ :call _zz() \| wqa<CR>\n"\
        > $basedir/vim-start.vim
}
make_sh_start_config()
{
    printf "%b" \
        "set HISTCONTROL ignorespace\n"\
        "alias 'scd'='vim --servername envi --remote-send \"<Esc>: Scd<CR>\" ^ /dev/null &; vifm --server-name envi --remote -c scd ^ /dev/null &; cd \$argv'\n"\
        "bind -M insert \\\\ev 'if [ (pidof -s envim) != \"\" ] ^ /dev/null; cd (readlink /proc/(pidof -s envim)/cwd); if [ (jobs) ]; fg ^&1 > /dev/null; end; commandline -f repaint; end'\n"\
        "bind -M normal \\\\ev 'if [ (pidof -s envim) != \"\" ] ^ /dev/null; cd (readlink /proc/(pidof -s envim)/cwd); if [ (jobs) ]; fg ^&1 > /dev/null; end; commandline -f repaint; end'\n"\
        "bind -M insert \\\\ef 'if [ (pidof -s envifm) != \"\" ] ^ /dev/null; cd (readlink /proc/(pidof -s envifm)/cwd); if [ (jobs) ]; fg ^&1 > /dev/null; end; commandline -f repaint; end'\n"\
        "bind -M normal \\\\ef 'if [ (pidof -s envifm) != \"\" ] ^ /dev/null; cd (readlink /proc/(pidof -s envifm)/cwd); if [ (jobs) ]; fg ^&1 > /dev/null; end; commandline -f repaint; end'\n"\
        > $basedir/sh-start.fish
}
make_tmux_start_config()
{
    printf "%b" \
        "set -g status off"\
        > $basedir/tmux-start.conf
}

# start functions
start_vim_server()
{
    vim_start_options="silent source $basedir/vim-start.vim"
    $terminal $vim_cmd --servername $vim_servername -c "$vim_start_options" &
}
start_sh_server()
{
    tmux -f $basedir/tmux-start.conf new-session -d -s $sh_servername $fish_cmd
    tmux send-keys -t$sh_servername " source $basedir/sh-start.fish" C-m C-l C-l
    $terminal tmux attach-session -d -t$sh_servername &
}
start_vifm_server()
{
    vifm_start_options="source $basedir/vifm-start"
    $terminal $vifm_cmd --server-name $vifm_servername -c "$vifm_start_options" &
}

main "$@"
